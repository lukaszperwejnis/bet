name: tag-aws-deployment-workflow
on:
  push:
    tags:
      - "v*"
jobs:
  Run-aws-deployment:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v2

      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."

      - name: List files in the repository
        run: ls ${{ github.workspace }}
      - name: Install required dependencies
        run: yarn

      - name: Grant access for script files
        run: chmod -R +x scripts

      - name: Build packages
        run: lerna run build

      - name: Run linters
        run: lerna run lint

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: bet
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build . -f root.Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --no-cache
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - run: echo "üçè This job's status is ${{ job.status }}."
